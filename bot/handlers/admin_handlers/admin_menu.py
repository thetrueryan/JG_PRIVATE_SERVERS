from aiogram.types import Message, FSInputFile
from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.states import VPNOrder
from config.settings import ADMIN_TG_ID
from bot.keyboards.admin_keyboard.admin_menu_keyboard import admin_menu_keyboard, admin_waiting_keyboard, admin_continue_keyboard
from bot.keyboards.user_keyboard.back_keyboard import back_button
from db.repositories.core import AsyncCore

router = Router()

@router.message(Command("admin"))
async def cmd_admin_menu(message: Message, state: FSMContext):
    if message.from_user:
            telegram_id = message.from_user.id
            admin_id_int = int(ADMIN_TG_ID)
            if telegram_id == admin_id_int:
                await state.update_data(prev="main_menu")
                await message.answer(text="üîë <u><b>–ê–¥–º–∏–Ω –º–µ–Ω—é</b></u>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", reply_markup=admin_menu_keyboard())
                await state.set_state(VPNOrder.admin_menu)
            else:
                pass

@router.message(VPNOrder.admin_menu, F.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
async def cmd_send_telegram_id(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏—à–ª–∏—Ç–µ telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", reply_markup=back_button())
    await state.set_state(VPNOrder.send_tg_id)

@router.message(VPNOrder.send_tg_id, F.text != "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
async def cmd_check_sended_tg_id(message: Message, state: FSMContext):
    if message.from_user:
        tg_id = message.text
        if tg_id:
            try:
                tg_id_int = int(tg_id)
                if tg_id_int:
                    user = await AsyncCore.get_user_by_tg_id(tg_id_int)
                    if user:
                        await state.update_data(prev=VPNOrder.admin_menu)
                        await state.update_data(tg_id_to_send_config=tg_id_int)
                        await state.set_state(VPNOrder.send_conf)
                        await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å i {tg_id_int} —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω! –ù–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞", reply_markup=admin_continue_keyboard())
                    else:
                        await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {tg_id_int} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                        return
            except:
                await message.answer(text="telegram id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
                return
        else:
            await message.answer(text="–°–æ–æ–±—â–µ–Ω–∏–µ —Å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return
        
@router.message(VPNOrder.send_conf, F.text != "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
async def cmd_send_config_file(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", reply_markup=back_button())
    await state.update_data(prev=VPNOrder.send_conf)
    await state.set_state(VPNOrder.check_conf)
    
@router.message(VPNOrder.check_conf, F.text != "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
async def cmd_check_config_file(message: Message, state: FSMContext):
    if message.from_user:
        if message.document:
            if message.document.file_name:
                if message.document.file_name.endswith(('.ovpn')):
                    if message.document.file_size:
                        if message.document.file_size > 5 * 1024 * 1024:
                            await message.answer("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä - 5MB")
                            return
                        else:
                            await state.update_data(
                                file_id=message.document.file_id,
                                file_name=message.document.file_name
                            )   
                            await state.set_state(VPNOrder.waiting_for_continue)
                            await message.answer("–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç! –ù–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ", reply_markup=admin_continue_keyboard())
                else:
                    await message.answer("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞")
                    return
        else:
            await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª!")    
            return


@router.message(VPNOrder.waiting_for_continue, F.text != "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
async def cmd_wait_for_continue(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer(f"–ù–∞–∂–º–∏—Ç–µ <b>'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å'</b>, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—é —Å telegram_id: {data["tg_id_to_send_config"]}", reply_markup=admin_waiting_keyboard())
    await state.update_data(prev=VPNOrder.send_conf)
    await state.set_state(VPNOrder.send_file_to_user)

@router.message(VPNOrder.send_file_to_user, F.text == "‚úÖ –û–¢–ü–†–ê–í–ò–¢–¨")
async def cmd_send_file_to_user(message: Message, state: FSMContext):
    data = await state.get_data()
    file_id = data["file_id"]
    tg_id = data["tg_id_to_send_config"]
    try:
        if message.bot:
            await message.bot.send_document(chat_id=tg_id, document=file_id, caption=f"üîë <b>–í–∞—à —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>\n")
            await message.answer("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
    await state.clear()